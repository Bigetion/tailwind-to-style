import{getConfigOptions}from"./utils/index";import generateAccentColor from"./generators/accentColor";import generateAccessibility from"./generators/accessibility";import generateAlignContent from"./generators/alignContent";import generateAlignItems from"./generators/alignItems";import generateAlignSelf from"./generators/alignSelf";import generateAppearance from"./generators/appearance";import generateAspect from"./generators/aspect";import generateBackgroundAttachment from"./generators/backgroundAttachment";import generateBackgroundClip from"./generators/backgroundClip";import generateBackgroundColor from"./generators/backgroundColor";import generateBackgroundImage from"./generators/backgroundImage";import generateBackgroundOpacity from"./generators/backgroundOpacity";import generateBackgroundOrigin from"./generators/backgroundOrigin";import generateBackgroundPosition from"./generators/backgroundPosition";import generateBackgroundRepeat from"./generators/backgroundRepeat";import generateBackgroundSize from"./generators/backgroundSize";import generateBlur from"./generators/blur";import generateBorderCollapse from"./generators/borderCollapse";import generateBorderColor from"./generators/borderColor";import generateBorderOpacity from"./generators/borderOpacity";import generateBorderRadius from"./generators/borderRadius";import generateBorderSpacing from"./generators/borderSpacing";import generateBorderStyle from"./generators/borderStyle";import generateBorderWidth from"./generators/borderWidth";import generateBoxDecorationBreak from"./generators/boxDecorationBreak";import generateBoxShadow from"./generators/boxShadow";import generateBoxSizing from"./generators/boxSizing";import generateBrightness from"./generators/brightness";import generateCaptionSide from"./generators/captionSide";import generateCaretColor from"./generators/caretColor";import generateClear from"./generators/clear";import generateContent from"./generators/content";import generateContrast from"./generators/contrast";import generateCursor from"./generators/cursor";import generateDisplay from"./generators/display";import generateDivideColor from"./generators/divideColor";import generateDivideOpacity from"./generators/divideOpacity";import generateDivideStyle from"./generators/divideStyle";import generateDivideWidth from"./generators/divideWidth";import generateDropShadow from"./generators/dropShadow";import generateFill from"./generators/fill";import generateFilter from"./generators/filter";import generateFlex from"./generators/flex";import generateFlexBasis from"./generators/flexBasis";import generateFlexDirection from"./generators/flexDirection";import generateFlexGrow from"./generators/flexGrow";import generateFlexShrink from"./generators/flexShrink";import generateFlexWrap from"./generators/flexWrap";import generateFloat from"./generators/float";import generateFontSize from"./generators/fontSize";import generateFontSmoothing from"./generators/fontSmoothing";import generateFontStyle from"./generators/fontStyle";import generateFontVariantNumeric from"./generators/fontVariantNumeric";import generateFontWeight from"./generators/fontWeight";import generateGap from"./generators/gap";import generateGradientColorStops from"./generators/gradientColorStops";import generateGrayscale from"./generators/grayscale";import generateGridAutoColumns from"./generators/gridAutoColumns";import generateGridAutoFlow from"./generators/gridAutoFlow";import generateGridAutoRows from"./generators/gridAutoRows";import generateGridColumn from"./generators/gridColumn";import generateGridColumnEnd from"./generators/gridColumnEnd";import generateGridColumnStart from"./generators/gridColumnStart";import generateGridRow from"./generators/gridRow";import generateGridRowEnd from"./generators/gridRowEnd";import generateGridRowStart from"./generators/gridRowStart";import generateGridTemplateColumns from"./generators/gridTemplateColumns";import generateGridTemplateRows from"./generators/gridTemplateRows";import generateHeight from"./generators/height";import generateHueRotate from"./generators/hueRotate";import generateHyphens from"./generators/hyphens";import generateInset from"./generators/inset";import generateInvert from"./generators/invert";import generateIsolation from"./generators/isolation";import generateJustifyContent from"./generators/justifyContent";import generateJustifyItems from"./generators/justifyItems";import generateJustifySelf from"./generators/justifySelf";import generateLetterSpacing from"./generators/letterSpacing";import generateLineClamp from"./generators/lineClamp";import generateLineHeight from"./generators/lineHeight";import generateListStylePosition from"./generators/listStylePosition";import generateListStyleType from"./generators/listStyleType";import generateMargin from"./generators/margin";import generateMaxHeight from"./generators/maxHeight";import generateMaxWidth from"./generators/maxWidth";import generateMinHeight from"./generators/minHeight";import generateMinWidth from"./generators/minWidth";import generateMixBlendMode from"./generators/mixBlendMode";import generateObjectFit from"./generators/objectFit";import generateObjectPosition from"./generators/objectPosition";import generateOpacity from"./generators/opacity";import generateOrder from"./generators/order";import generateOutlineColor from"./generators/outlineColor";import generateOutlineOffset from"./generators/outlineOffset";import generateOutlineOpacity from"./generators/outlineOpacity";import generateOutlineStyle from"./generators/outlineStyle";import generateOutlineWidth from"./generators/outlineWidth";import generateOverflow from"./generators/overflow";import generateOverscrollBehavior from"./generators/overscrollBehavior";import generatePadding from"./generators/padding";import generatePlaceContent from"./generators/placeContent";import generatePlaceItems from"./generators/placeItems";import generatePlaceSelf from"./generators/placeSelf";import generatePointerEvents from"./generators/pointerEvents";import generatePosition from"./generators/position";import generateResize from"./generators/resize";import generateRingColor from"./generators/ringColor";import generateRingOffsetColor from"./generators/ringOffsetColor";import generateRingOffsetWidth from"./generators/ringOffsetWidth";import generateRingOpacity from"./generators/ringOpacity";import generateRingWidth from"./generators/ringWidth";import generateSaturate from"./generators/saturate";import generateRotate from"./generators/rotate";import generateScale from"./generators/scale";import generateScrollBehavior from"./generators/scrollBehavior";import generateScrollMargin from"./generators/scrollMargin";import generateScrollPadding from"./generators/scrollPadding";import generateScrollSnapAlign from"./generators/scrollSnapAlign";import generateScrollSnapStop from"./generators/scrollSnapStop";import generateScrollSnapType from"./generators/scrollSnapType";import generateSepia from"./generators/sepia";import generateSize from"./generators/size";import generateSkew from"./generators/skew";import generateSpace from"./generators/space";import generateStroke from"./generators/stroke";import generateStrokeWidth from"./generators/strokeWidth";import generateTableLayout from"./generators/tableLayout";import generateTextAlign from"./generators/textAlign";import generateTextColor from"./generators/textColor";import generateTextDecoration from"./generators/textDecoration";import generateTextDecorationColor from"./generators/textDecorationColor";import generateTextDecorationStyle from"./generators/textDecorationStyle";import generateTextDecorationThickness from"./generators/textDecorationThickness";import generateTextIndent from"./generators/textIndent";import generateTextOpacity from"./generators/textOpacity";import generateTextOverflow from"./generators/textOverflow";import generateTextShadowBlur from"./generators/textShadowBlur";import generateTextShadowColor from"./generators/textShadowColor";import generateTextShadowOpacity from"./generators/textShadowOpacity";import generateTextShadowX from"./generators/textShadowX";import generateTextShadowY from"./generators/textShadowY";import generateTextTransform from"./generators/textTransform";import generateTextUnderlineOffset from"./generators/textUnderlineOffset";import generateTextWrap from"./generators/textWrap";import generateTouchAction from"./generators/touchAction";import generateTransform from"./generators/transform";import generateTransformOrigin from"./generators/transformOrigin";import generateTranslate from"./generators/translate";import generateUserSelect from"./generators/userSelect";import generateVerticalAlign from"./generators/verticalAlign";import generateVisibility from"./generators/visibility";import generateWhitespace from"./generators/whitespace";import generateWidth from"./generators/width";import generateWordBreak from"./generators/wordBreak";import generateWillChange from"./generators/willChange";import generateZIndex from"./generators/zIndex";import patterns from"./patterns/index";const plugins={accentColor:generateAccentColor,accessibility:generateAccessibility,alignContent:generateAlignContent,alignItems:generateAlignItems,alignSelf:generateAlignSelf,appearance:generateAppearance,aspect:generateAspect,backgroundAttachment:generateBackgroundAttachment,backgroundClip:generateBackgroundClip,backgroundColor:generateBackgroundColor,backgroundImage:generateBackgroundImage,backgroundOpacity:generateBackgroundOpacity,backgroundOrigin:generateBackgroundOrigin,backgroundPosition:generateBackgroundPosition,backgroundRepeat:generateBackgroundRepeat,backgroundSize:generateBackgroundSize,blur:generateBlur,borderCollapse:generateBorderCollapse,borderColor:generateBorderColor,borderOpacity:generateBorderOpacity,borderRadius:generateBorderRadius,borderSpacing:generateBorderSpacing,borderStyle:generateBorderStyle,borderWidth:generateBorderWidth,boxDecorationBreak:generateBoxDecorationBreak,boxShadow:generateBoxShadow,boxSizing:generateBoxSizing,brightness:generateBrightness,captionSide:generateCaptionSide,caretColor:generateCaretColor,clear:generateClear,content:generateContent,contrast:generateContrast,cursor:generateCursor,display:generateDisplay,divideColor:generateDivideColor,divideOpacity:generateDivideOpacity,divideStyle:generateDivideStyle,divideWidth:generateDivideWidth,dropShadow:generateDropShadow,fill:generateFill,filter:generateFilter,flex:generateFlex,flexBasis:generateFlexBasis,flexDirection:generateFlexDirection,flexGrow:generateFlexGrow,flexShrink:generateFlexShrink,flexWrap:generateFlexWrap,float:generateFloat,fontSize:generateFontSize,fontSmoothing:generateFontSmoothing,fontStyle:generateFontStyle,fontVariantNumeric:generateFontVariantNumeric,fontWeight:generateFontWeight,gap:generateGap,gradientColorStops:generateGradientColorStops,grayscale:generateGrayscale,gridAutoColumns:generateGridAutoColumns,gridAutoFlow:generateGridAutoFlow,gridAutoRows:generateGridAutoRows,gridColumn:generateGridColumn,gridColumnEnd:generateGridColumnEnd,gridColumnStart:generateGridColumnStart,gridRow:generateGridRow,gridRowEnd:generateGridRowEnd,gridRowStart:generateGridRowStart,gridTemplateColumns:generateGridTemplateColumns,gridTemplateRows:generateGridTemplateRows,height:generateHeight,hueRotate:generateHueRotate,hyphens:generateHyphens,inset:generateInset,invert:generateInvert,isolation:generateIsolation,justifyContent:generateJustifyContent,justifyItems:generateJustifyItems,justifySelf:generateJustifySelf,letterSpacing:generateLetterSpacing,lineClamp:generateLineClamp,lineHeight:generateLineHeight,listStylePosition:generateListStylePosition,listStyleType:generateListStyleType,margin:generateMargin,maxHeight:generateMaxHeight,maxWidth:generateMaxWidth,minHeight:generateMinHeight,minWidth:generateMinWidth,objectFit:generateObjectFit,mixBlendMode:generateMixBlendMode,objectPosition:generateObjectPosition,opacity:generateOpacity,order:generateOrder,outlineColor:generateOutlineColor,outlineOffset:generateOutlineOffset,outlineOpacity:generateOutlineOpacity,outlineStyle:generateOutlineStyle,outlineWidth:generateOutlineWidth,overflow:generateOverflow,overscrollBehavior:generateOverscrollBehavior,padding:generatePadding,placeContent:generatePlaceContent,placeItems:generatePlaceItems,placeSelf:generatePlaceSelf,pointerEvents:generatePointerEvents,position:generatePosition,resize:generateResize,ringColor:generateRingColor,ringOffsetColor:generateRingOffsetColor,ringOffsetWidth:generateRingOffsetWidth,ringOpacity:generateRingOpacity,ringWidth:generateRingWidth,rotate:generateRotate,saturate:generateSaturate,scale:generateScale,scrollBehavior:generateScrollBehavior,scrollMargin:generateScrollMargin,scrollPadding:generateScrollPadding,scrollSnapAlign:generateScrollSnapAlign,scrollSnapStop:generateScrollSnapStop,scrollSnapType:generateScrollSnapType,sepia:generateSepia,size:generateSize,skew:generateSkew,space:generateSpace,stroke:generateStroke,strokeWidth:generateStrokeWidth,tableLayout:generateTableLayout,textAlign:generateTextAlign,textColor:generateTextColor,textDecoration:generateTextDecoration,textDecorationColor:generateTextDecorationColor,textDecorationStyle:generateTextDecorationStyle,textDecorationThickness:generateTextDecorationThickness,textIndent:generateTextIndent,textOpacity:generateTextOpacity,textOverflow:generateTextOverflow,textShadowBlur:generateTextShadowBlur,textShadowColor:generateTextShadowColor,textShadowOpacity:generateTextShadowOpacity,textShadowX:generateTextShadowX,textShadowY:generateTextShadowY,textTransform:generateTextTransform,textUnderlineOffset:generateTextUnderlineOffset,textWrap:generateTextWrap,touchAction:generateTouchAction,transform:generateTransform,transformOrigin:generateTransformOrigin,translate:generateTranslate,userSelect:generateUserSelect,verticalAlign:generateVerticalAlign,visibility:generateVisibility,whitespace:generateWhitespace,width:generateWidth,willChange:generateWillChange,wordBreak:generateWordBreak,zIndex:generateZIndex};function parseCustomClassWithPatterns(e){for(const r in patterns){const{regex:t,cssProp:o,formatter:n}=patterns[r],a=e.match(t);if(a){return`${o}: ${n(a[1])};`}}return null}const configOptionsCache=new Map,cacheKey=e=>JSON.stringify(e);function generateTailwindCssString(e={}){const r=Object.keys(plugins),t=cacheKey(e);configOptionsCache.has(t)||(configOptionsCache.set(t,getConfigOptions(e,r)),limitCacheSize(configOptionsCache));const o=configOptionsCache.get(t),{corePlugins:n={}}=o,a=Object.keys(n);let i="";return Object.keys(plugins).forEach(e=>{a.indexOf(e)>=0&&!n[e]?i+="":i+=plugins[e](o)}),i}function convertCssToObject(e){const r={},t=/([a-zA-Z0-9\-_\\/.]+)\s*{\s*([^}]+)\s*}/g;let o;for(;null!==(o=t.exec(e));){const e=o[1].replace(/\\\\/g,"\\").replace(/^_/,""),t=o[2].trim().replace(/\s+/g," ");r[e]=t}return r}let twString=null,cssObject=null;twString||(twString=generateTailwindCssString().replace(/\s\s+/g," ")),cssObject||(cssObject=convertCssToObject(twString));const breakpoints={sm:"@media (min-width: 640px)",md:"@media (min-width: 768px)",lg:"@media (min-width: 1024px)",xl:"@media (min-width: 1280px)","2xl":"@media (min-width: 1536px)"},pseudoVariants=new Set(["hover","focus","focus-within","active","visited","disabled","first","last","checked","invalid","required"]),specialVariants={group:(e,r)=>`.group:${e} ${r}`,peer:(e,r)=>`.peer:${e} ~ ${r}`},selectorVariants={first:()=>"> :first-child",last:()=>"> :last-child",odd:()=>"> :nth-child(odd)",even:()=>"> :nth-child(even)",not:e=>`> :not(${e})`,number:e=>`> :nth-child(${e})`},encodeBracketCache=new Map;function encodeBracketValues(e){if(!e)return e;if(encodeBracketCache.has(e))return encodeBracketCache.get(e);const r=e.replace(/\[([^\]]+)\]/g,(e,r)=>`[${encodeURIComponent(r).replace(/\(/g,"__P__").replace(/\)/g,"__C__")}]`);return encodeBracketCache.set(e,r),limitCacheSize(encodeBracketCache),r}const decodeBracketCache=new Map;function decodeBracketValues(e){if(!e)return e;if(decodeBracketCache.has(e))return decodeBracketCache.get(e);const r=decodeURIComponent(e).replace(/__P__/g,"(").replace(/__C__/g,")");return decodeBracketCache.set(e,r),limitCacheSize(decodeBracketCache),r}function replaceSelector(e){return e.replace(/c-(first|last|odd|even|\d+|not\([^)]+\))/g,(e,r)=>{if(/^\d+$/.test(r))return selectorVariants.number(r);const t=r.match(/^not\(([^)]+)\)$/);return t?selectorVariants.not(t[1]):selectorVariants[r]?selectorVariants[r]():r})}function resolveVariants(e,r){let t=null,o=e;for(const e of r)if(breakpoints[e])t=breakpoints[e];else if(pseudoVariants.has(e))o+=`:${e}`;else for(const r in specialVariants)if(e.startsWith(`${r}-`)){const t=e.slice(r.length+1);o=specialVariants[r](t,o);break}return{media:t,finalSelector:o}}function inlineStyleToJson(e){const r=e.split(";").filter(e=>""!==e.trim()),t={};return r.forEach(e=>{const[r,o]=e.split(":").map(e=>e.trim());if(r&&o){const e=r.replace(/-([a-z])/g,(e,r)=>r.toUpperCase());t[e]=o}}),t}const cssResolutionCache=new Map;function separateAndResolveCSS(e){if(cssResolutionCache.has(cacheKey))return cssResolutionCache.get(cacheKey);limitCacheSize(cssResolutionCache);const r={};e.forEach(e=>{if(!e)return;e.split(";").map(e=>e.trim()).filter(e=>e).forEach(e=>{const t=e.indexOf(":");if(-1===t)return;const o=e.substring(0,t).trim(),n=e.substring(t+1).trim();o&&n&&(!n.includes("!important")&&r[o]||(r[o]=n))})});const t={...r};Object.keys(t).forEach(e=>{var r,o;t[e]=(r=t[e],o=t,r&&r.includes("var(")?r.replace(/var\((--[a-zA-Z0-9-]+)(?:,\s*([^)]+))?\)/g,(e,r,t)=>o[r]||t||e):r)}),Object.keys(t).forEach(e=>{e.startsWith("--")&&delete t[e]});const o=Object.entries(t).map(([e,r])=>`${e}: ${r};`).join(" ");return cssResolutionCache.set(cacheKey,o),o}function limitCacheSize(e,r=1e3){if(e.size>r){const r=Math.floor(.2*e.size);Array.from(e.keys()).slice(0,r).forEach(r=>e.delete(r))}}function debounce(e,r=100){let t;return function(...o){const n=this;clearTimeout(t),t=setTimeout(()=>e.apply(n,o),r)}}export function tws(e,r){if([!e,"string"!=typeof e,""===e.trim()].includes(!0))return r?{}:"";let t;try{if(t=e.match(/[\w-]+\[[^\]]+\]|[\w-]+\.\d+|[\w-]+/g),!t||0===t.length)return console.warn(`No valid Tailwind classes found in input: "${e}"`),r?{}:""}catch(e){return console.error(`Error parsing Tailwind classes: ${e.message}`),r?{}:""}let o=t.map(e=>{if(cssObject[e])return cssObject[e];if(e.includes("[")){const r=e.match(/\[([^\]]+)\]/);if(r){const t=r[1],o=e.split("[")[0];if(cssObject[`${o}custom`])return cssObject[`${o}custom`].replace(/custom_value/g,t)}}return""});return o=separateAndResolveCSS(o),r&&(o=inlineStyleToJson(o)),o}export function twsx(e){if(!e||"object"!=typeof e)return console.warn("twsx: Expected an object but received:",e),"";const r={};function t(e){function r(e){return e.replace(/(\w+)\(([^()]+)\)/g,(e,r,t)=>t.trim().split(/\s+/).map(e=>{if(e.includes(":")){const[t,o]=e.split(":"),n=o.startsWith("-")?"-":"",a=o.startsWith("-")?o.slice(1):o;return`${t}:${n}${r}-${a}`}const t=e.startsWith("-")?"-":"",o=e.startsWith("-")?e.slice(1):e;return`${t}${r}-${o}`}).join(" "))}function t(e,r=""){return e.replace(/(\w+):\(([^()]+(?:\((?:[^()]+)\))?[^()]*)\)/g,(e,o,n)=>n.trim().split(/\s+/).map(e=>/\w+:\(.*\)/.test(e)?t(e,r?`${r}:${o}`:o):`${r?`${r}:${o}`:o}:${e}`).join(" "))}let o,n=encodeBracketValues(e);do{o=n,n=t(n),n=r(n)}while(n!==o);return n}function o(e,n){if(!e||"string"!=typeof e)return void console.warn("Invalid selector in walk function:",e);const{baseSelector:i,cssProperty:s}=a(e);if(s&&"object"==typeof n&&Array.isArray(n)&&n.length>0){const e=n[0];if("string"==typeof e)return r[i]=r[i]||"",void(r[i]+=`${s}: ${e};\n`)}if(Array.isArray(n)){const[t,a]=n;if("string"!=typeof t)return;for(const o of t.split(" ")){if(""===o.trim())continue;const[t,n]=o.includes(":")?[o.split(":").slice(0,-1),o.split(":").slice(-1)[0]]:[[],o];let a=!1,i=n;n.startsWith("!")&&(a=!0,i=n.slice(1));const{media:s,finalSelector:g}=resolveVariants(e,t);let l=cssObject[i]||cssObject[i.replace(/(\/)/g,"\\$1")]||cssObject[i.replace(/\./g,"\\.")];if(!l&&i.includes("[")){const e=i.match(/^(.+?)\[(.+)\]$/);if(e){const[,r,t]=e,o=cssObject[`${r}custom`];o&&(l=o.replace(/custom_value/g,decodeBracketValues(t)))}}if(l||(l=parseCustomClassWithPatterns(i)),!l)continue;a&&(l=l.replace(/([^:;]+):([^;]+)(;?)/g,(e,r,t)=>r.trim().startsWith("--")?`${r}:${t};`:`${r}:${t.trim()} !important;`));const c=["space-x-","-space-x-","space-y-","-space-y-","divide-"].some(e=>i.startsWith(e)),m=replaceSelector(g),p=c?`${m} > :not([hidden]) ~ :not([hidden])`:m;s?(r[s]=r[s]||{},r[s][p]=r[s][p]||"",r[s][p]+=l+"\n"):(r[p]=r[p]||"",r[p]+=l+"\n")}for(const t in a){const n=a[t];if("@css"===t&&"object"==typeof n){const t=Object.entries(n).map(([e,r])=>`${e}: ${r};`).join(" ");e in r?r[e]+=t+"\n":r[e]=t+"\n";continue}o(t.includes("&")?t.replace(/&/g,e):`${e} ${t}`,n)}}else if("string"==typeof n){if(""===n.trim())return;o(e,[t(n)])}else if("object"==typeof n&&null!==n){const{baseSelector:t,cssProperty:o}=a(e);if(o){const e=Object.values(n).join(" ");return r[t]=r[t]||"",void(r[t]+=`${o}: ${e};\n`)}const i=Object.entries(n).map(([e,r])=>`${e}: ${r};`).join(" ");e in r?r[e]+=i+"\n":r[e]=i+"\n"}}const n=new Map;function a(e){if(n.has(e))return n.get(e);let r;if(e.includes("@css")){const t=e.split("@css"),o=t[0].trim(),n=t[1]?.trim();r={baseSelector:o,cssProperty:n}}else r={baseSelector:e,cssProperty:null};return n.set(e,r),limitCacheSize(n),r}function i(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}const s=function e(r,t=""){const o={};for(const n in r){const a=r[n],s=t?n.includes("&")?n.replace(/&/g,t):`${t} ${n}`:n;if("string"==typeof a)o[s]=a;else if(Array.isArray(a)){const r=[];for(const t of a)if("string"==typeof t)r.push(t);else if(i(t)){const r=e(t,s);Object.assign(o,r)}r.length>0&&(o[s]=o[s]||[],o[s].push(...r))}else if(i(a)){const r=e(a,s);Object.assign(o,r)}}return o}(e);for(const e in s){let r=s[e],n="",a={};if("string"==typeof r)n=t(r);else if(Array.isArray(r))for(const e of r)"string"==typeof e?n+=(n?" ":"")+t(e):"object"==typeof e&&null!==e&&Object.assign(a,e);o(e,[n,a])}let g="";const l=[],c=[];for(const e in r)e.startsWith("@media")?c.push({sel:e,content:r[e]}):l.push({sel:e,css:r[e]});for(const{sel:e,css:r}of l)g+=`${e}{${r.trim().replace(/\n/g,"")}}`;function m(e){const r=e.match(/@media \(min-width: (\d+)px\)/);return r?parseInt(r[1],10):99999}c.sort((e,r)=>m(e.sel)-m(r.sel));for(const{sel:e,content:r}of c){g+=`${e}{`;for(const e in r)g+=`${e}{${r[e].trim().replace(/\n/g,"")}}`;g+="}"}return g.trim()}export const debouncedTws=debounce(tws);export const debouncedTwsx=debounce(twsx);